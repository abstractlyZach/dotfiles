# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term foot

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)

# wallpaper by Daniel Leone
output * bg $XDG_CONFIG_HOME/wallpaper.jpg fill

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# disable ThinkPad touchpad
input "2:7:SynPS/2_Synaptics_TouchPad" events disabled

# laptop keyboard
input "1:1:AT_Translated_Set_2_keyboard" {
    # remap capslock key to esc 
    xkb_options caps:escape
    # remap prtsc key to mod4
    xkb_file $XDG_CONFIG_HOME/keymap.xkb
}

# framework laptop
input "2362:628:PIXA3854:00_093A:0274_Touchpad" {
    tap enabled
}

# carbonx1 touchpad
input "1739:52824:SYNA8008:00_06CB:CE58_Touchpad" {
    tap enabled
}


### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # screenshots
    bindsym $mod+s exec screenshot
    bindsym $mod+Shift+s exec grim -c

    # fuzzy-find an emoji
    bindsym $mod+grave exec fzf_emoji

    # dismiss most recent notification
    bindsym  $mod+Shift+grave exec --no-startup-id makoctl dismiss

    # Open a web browser
    bindsym $mod+w exec $BROWSER

    # Kill focused window
    bindsym $mod+Shift+q kill

    # open IDE
    bindsym $mod+i exec fzf_rzd_local
    bindsym $mod+Shift+i exec fzf_rzd

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

    bindsym $mod+c exec open_calendar
    bindsym $mod+m exec open_mail
    bindsym $mod+Shift+m exec open_chat

    bindsym $mod+p exec wlogout

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    bindsym $mod+Tab workspace back_and_forth

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    # bindsym $mod+s layout stacking
    bindsym $mod+t layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
    # position top

    # # When the status_command prints a new line to stdout, swaybar updates.
    # # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

    # colors {
    #     statusline #ffffff
    #     background #323232
    #     inactive_workspace #32323200 #32323200 #5c5c5c
    # }
}

include /etc/sway/config.d/*

# cosmetics
gaps inner 5
gaps outer 5

# use fzf for launcher
set $launcher list_executables | fzf --reverse | xargs swaymsg exec
bindsym $mod+d exec foot -a launcher zsh -c \'$launcher\'

# fallback in case alacritty or fzf fail
bindsym $mod+Shift+d exec dmenu_path | dmenu | xargs swaymsg exec --

# float any windows whose app_id is launcher
for_window [app_id="^launcher$"] floating enable, border pixel 5
for_window [app_id="^launcher$"] resize set 400 400

# float any windows whose title starts with "!"
for_window [title="^!.*$"] floating enable, border pixel 5

# all windows have no title bars and have a border x pixels thick
for_window [title="^.*$"] border pixel 3

# volume control
# bindsym XF86AudioRaiseVolume exec "pamixer --allow-boost --increase 3"
# bindsym XF86AudioLowerVolume exec "pamixer --allow-boost --decrease 3"
# bindsym XF86AudioMute exec "pamixer --toggle-mute"
# bindsym XF86MonBrightnessDown exec "light -U 3"
# bindsym XF86MonBrightnessUp exec "light -A 3"

# media/brightness buttons
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +5%
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 5%-
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous


## Window decoration
# class                 border  backgr. text    indicator child_border
client.focused          #88c0d0 #434c5e #eceff4 #8fbcbb   #88c0d0
client.focused_inactive #88c0d0 #2e3440 #d8dee9 #4c566a   #4c566a
client.unfocused        #88c0d0 #2e3440 #d8dee9 #4c566a   #4c566a
client.urgent           #ebcb8b #ebcb8b #2e3440 #8fbcbb   #ebcb8b

# font
font pango:SourceCodePro, FontAwesome 11

# bind workspaces to displays

# attempt to bind these to external monitors
workspace 1 output HDMI-A-1 DP-1
workspace 2 output HDMI-A-1 DP-1
workspace 3 output HDMI-A-1 DP-1
workspace 4 output HDMI-A-1 DP-1
workspace 5 output HDMI-A-1 DP-1
workspace 6 output HDMI-A-1 DP-1
workspace 7 output HDMI-A-1 DP-1
workspace 8 output HDMI-A-1 DP-1

# bind these to primary laptop monitors
workspace 9 output eDP-1 LVDS-1 
workspace 10 output eDP-1 LVDS-1 

# display-specific configurations can be found in kanshi

# assign these windows to specific workspaces
for_window [app_id="chrome-mail.google.com__-Profile_1"] move container to workspace 1
for_window [app_id="chrome-calendar.google.com__-Profile_1"] move container to workspace 2
for_window [app_id="chrome-chat.google.com__-Profile_1"] move container to workspace 3


# rename workspaces based on what's running
# https://github.com/Lyr-7D1h/swayest_workstyle
exec_always pkill sworkstyle; exec sworkstyle &> /tmp/sworkstyle.log

# automatically tile windows evenly on these workspaces
exec_always autotiling

# clamshell mode
# https://github.com/swaywm/sway/wiki#clamshell-mode
set $laptop LVDS-1
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable
exec_always /home/zach/bin/clamshell_mode

# notifications
exec mako

# mouse cursor
# https://wiki.archlinux.org/title/Sway#Change_cursor_theme_and_size
seat seat0 xcursor_theme Bibata-Modern-Classic 24

exec --no-startup-id "ssh-agent -a $SSH_AUTH_SOCK"

# may want to move this to a systemd file eventually?
# https://www.reddit.com/r/swaywm/comments/juosa8/how_to_keep_kanshi_display_configuration_manager/
exec_always pkill kanshi; exec kanshi 2>/tmp/kanshi.log
